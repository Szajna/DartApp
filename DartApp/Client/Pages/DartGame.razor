@page "/DartGame"
@using DartApp.Shared;
@inject GameStateContainer gameState;
@inject NavigationManager navigationManager;
@inject IJSRuntime JSRuntime

<PageTitle>Dart game</PageTitle>
<div class="row">
    <div class="col-md-auto">
        <input type="number" class="form-control m-input" placeholder="Enter your score" @onkeyup="@Enter" @bind=@inputScore />
        <button id="ThrowResult" type="button" class="btn btn-success" style="width:100%" @onclick="() => AddScore()">Add Score</button>
        <h2>Dart Count</h2>
        @for (int i = gameState.Players.ElementAt(0).ScoreHistory.Count(); i-- > 0;)
        {
            <div class="row">
                <h1>@(i*3+3)</h1>
            </div>
            <div class="row-md-auto" style="border-top: 2px solid black"></div>
        }
    </div>
    <div class="col-md-auto" style="background-color: black; height:800px"></div>
    @foreach (var player in gameState.Players)
    {
        <div class="col">
            <h1 class="text-center">@player.Name</h1>
            <div class="row-md-auto" style="border-top: 2px solid black"></div>
            <div class="row">
                <div class="col">
                    <h3 class="text-center">Top Score: @player.TopScore</h3>
                </div>
                <div class="col-md-auto">
                    <h1 class="text-center">@player.Score</h1>
                </div>
                <div class="col">
                    <h3 class="text-center">Avg. Score: @player.AvgScore</h3>
                </div>
            </div>
            <div class="row-md-auto" style="border-top: 2px solid black"></div>
            <div class="row">

                @for (int i = player.ScoreHistory.Count() - 1; i-- > 0;)
                {
                    <h1>@player.ScoreHistory[i]</h1>
                    <div class="row-md-auto" style="border-top: 2px solid black"></div>
                }
            </div>
        </div>
        <div class="col-md-auto" style="background-color: black; height:auto"></div>
    }
</div>

@*<DartApp.Client.Components.FinalDartDialog Title="You won!" Text="How many double throws?"></DartApp.Client.Components.FinalDartDialog>*@

@code {

    public int? inputScore;
    public int currentTurn = 0;

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            AddScore();
        }
    }
    public void AddScore()
    {
        if (inputScore > 180 || inputScore < 0)
        {
            WrongScoreMessage();
        }
        else
        {
            if (gameState.Players.ElementAt(currentTurn).Score == inputScore)
            {

            }
            else
            {
                gameState.Players.ElementAt(currentTurn).AddScore(inputScore);
            }
            currentTurn++;
        }
        this.inputScore = null;
        CheckTurn();
    }
    public async void WrongScoreMessage()
    {
        await JSRuntime.InvokeVoidAsync("alert", "Wrong Score!");
    }
    public void CheckTurn()
    {
        if (currentTurn == gameState.TurnCount)
        {
            currentTurn = 0;
        }
    }
}